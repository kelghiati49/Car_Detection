ğŸ”¹ StratÃ©gie :
-L'utilisateur upload une vidÃ©o via Streamlit.
-La vidÃ©o est envoyÃ©e directement Ã  FastAPI en une seule requÃªte.
-FastAPI traite la vidÃ©o et renvoie le lien vers la video apres son traitement intitule "output_detected.
-Streamlit affiche l'output.

ğŸ”¹ Notebook :
- Car_detect.py : contient les modÃ¨les d'IA utilisÃ©s pour la dÃ©tection
  et le suivi des vÃ©hicules.
- backend.py : utilise FastAPI pour faire le lien entre le frontend et Car_detect.py.
- frontend.py : utilise Streamlit pour crÃ©er l'interface graphique du projet.

ğŸ”¹ DÃ©pendances :
- Nous travaillons sur une VM crÃ©Ã©e via Anaconda, avec Python 3.9.21.
Les versions des bibliothÃ¨ques utilisÃ©es dans ce projet se trouvent
dans requirements.txt.

ğŸ”¹ Limites :
- Notre modÃ¨le d'IA (Car_detect.py) ne s'adapte pas bien Ã  tous les types de vidÃ©os.
Pour cette raison, nous utilisons la vidÃ©o intitulÃ©e "CarInWay", qui se trouve
dans le mÃªme dossier que le projet.
Nous allons travailler avec cette vidÃ©o, puis nous procÃ©derons Ã  la rÃ©solution de cette limitepar la suite.